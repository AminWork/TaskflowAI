services:
  # PostgreSQL database service
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: kanban
      POSTGRES_PASSWORD: kanban
      POSTGRES_DB: kanban_db
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - kanban_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Go backend service
  backend:
    build:
      context: ./backend
      args:
        GOPROXY: "https://goproxy.cn,https://goproxy.io,https://proxy.golang.org,direct"
        GOSUMDB: "off"
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      PORT: "8080"
      JWT_SECRET: "supersecret-change-me"
      DB_DSN: "postgres://kanban:kanban@db:5432/kanban_db?sslmode=disable"
      CORS_ORIGINS: "http://localhost,http://localhost:3001,http://localhost:5173"
    ports:
      - "8080:8080"
    networks:
      - kanban_net

  # Nginx reverse proxy for HTTP & WebSocket
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    depends_on:
      - backend
      - frontend
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"
    networks:
      - kanban_net

  # React + Vite frontend service (served by Nginx in container)
  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - kanban_net

volumes:
  pgdata:

networks:
  kanban_net:
    driver: bridge
